[
    {
        "code": "CISC108",
        "name": "Introduction to Computer Science I",
        "descr": "Computing and principles of programming with an emphasis on systematic program design. Topics include functional programming, data abstraction, procedural abstraction, use of control and state, recursion, testing, and object-oriented programming concepts. Requires no prior programming experience, open to any major, but intended primarily for majors and minors in computer science or mathematics.",
        "credits": "3",
        "preReq": "CISC181, CISC210",
        "restrict": "",
        "breadth": "GROUP D: A&S Math, Nat Sci & Technology",
        "typ": "Fall and Spring"
    },{
        "code": "CISC181",
        "name": "Introduction to Computer Science II",
        "descr": "Principles of computer science illustrated and applied through programming in an object oriented language. Programming projects illustrate computational problems, styles and issues that arise in computer systems development and in all application areas of computation.",
        "credits": "3",
        "preReq": "CISC275",
        "restrict": "",
        "breadth": "GROUP D: A&S Math, Nat Sci & Technology",
        "typ": "Fall and Spring"
    },
    {
        "code": "CISC210",
        "name": "Introduction to Systems Programming",
        "descr": "",
        "credits": "3",
        "preReq": "CISC220, CISC260",
        "restrict": "",
        "breadth": "",
        "typ": ""
    },
    {
        "code": "CISC220",
        "descr": "Principles of computer systems programming for software and hardware platforms to achieve efficient resource usage. Topics include the C programming language, memory management, and awareness of system constraints and interfacing. Projects include programming embedded systems and interactive objects.",
        "name": "Data Structures",
        "credits": "3",
        "preReq": "CISC275, CISC303, CISC320, CISC361, CISC372",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
    },
    {
        "code": "CISC260",
        "name": "Machine Organization and Assembly Language",
        "descr": "Introduction to the basics of machine organization. Programming tools and techniques at the machine and assembly levels. Assembly language programming and computer arithmetic techniques.",
        "credits": "3",
        "preReq": "CISC361, CISC372",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
    },{
        "code": "CISC275",
        "name": "Introduction to Software Engineering",
        "descr": "Object oriented software design and development through use of an object oriented programming language. Topics include team programming, design patterns, graphical user interfaces, software engineering tools (e.g., integrated development environments, version control, build management, bug tracking, automated testing).",
        "credits": "3",
        "preReq": "CISC498",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
},{
        "code": "CISC303",
        "name": "Automata Theory",
        "descr": "Automata and formal language theory. Background for advanced applications in compilers, computer networks, operating systems, and natural language processing. Finite automata and regular languages. Push down automata and context free grammars. Turing machines.",
        "credits": "3",
        "preReq": "",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
    },{
        "code": "CISC320",
        "name": "Introduction to Algorithms",
        "descr": "Design and analysis of algorithms: worst/average case analysis, proofs for correctness and performance of algorithms. Algorithmic strategies (divide and conquer, greedy methods, dynamic programming, etc.). Algorithms for searching, forming and traversal of strings, trees and graphs. Categorization of computational problems: classes P and NP. NP completeness.",
        "credits": "3",
        "preReq": "CISC498",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
    },{
        "code": "CISC361",
        "name": "Operating Systems",
        "descr": "Principles and techniques employed in the development of operating systems and their control programs. Includes management of memory, processors, I/O devices.",
        "credits": "3",
        "preReq": "",
        "restrict": "CISC 360 recommended as a prereq",
        "breadth": "",
        "typ": "Fall and Spring"
    },{
        "code": "CISC372",
        "name": "Parallel Computing",
        "descr": "Introduction to parallel computing concepts, methodologies, and tools. Programming and algorithmic techniques for code that will run simultaneously on parallel computing architectures. Topics include: single and multi-core parallelism, shared and distributed memory architectures, concurrency, program decomposition, data distribution, communication, load balancing, scalability, locality, granularity, debugging, performance evaluation.",
        "credits": "3",
        "preReq": "",
        "restrict": "",
        "breadth": "",
        "typ": "Fall and Spring"
    },{
        "code": "MATH210",
        "name": "Discrete Mathematics I",
        "descr": "Elements of sets and logic. Relations, functions. Integers. Induction and recursion. Principles and techniques of counting. Graphs. Paths and circuits",
        "credits": "3",
        "preReq": "CISC303, CISC320",
        "restrict": "",
        "breadth": "GROUP D: A&S Math, Nat Sci & Technology",
        "typ": "Fall, Winter and Spring"
    },{
        "code": "MATH241",
        "name": "Analytic Geometry & Calculus A",
        "descr": "Functions, limits, continuity, derivatives. Polynomial, rational, exponential, hyperbolic, logarithmic, trigonometric and inverse trigonometric functions. Definite and indefinite integrals and the Fundamental Theorem of Calculus. Simple differential equations (separable ODE, linear ODE). ODE models leading to exponential growth and decay.",
        "credits": "4",
        "preReq": "MATH242",
        "restrict": "Students who received credit in MATH242 or MATH243 are not eligible to take this course without permission",
        "breadth": "GROUP D: A&S Math, Nat Sci & Technology",
        "typ": "Fall, Winter, Spring, Summer"
    },{
        "code": "MATH242",
        "name": "Analytic Geometry & Calculus B",
        "descr": "Brief review of MATH 241; evaluation of limits by L'Hospital's rule; applications of integration; integration techniques; parametric curves; polar coordinates; infinite sequences and series. Includes use of computers to perform symbolic, numerical and graphical analysis.",
        "credits": "4",
        "preReq": "MATH243",
        "restrict": "Students who receieved credit in MATH243 are not eligible to take this course without permission",
        "breadth": "GROUP D: A&S Math, Nat Sci & Technology",
        "typ": "Fall, Winter, Spring, Summer"
    },{
        "code": "CISC355",
        "name": "Computer Ethics & Society",
        "descr": "Explains relationships among information technology, society and ethics by examining issues raised by increasingly widespread use of computers. Topics include ethics for computer professionals, computer impact on factory work, office work, personal privacy and social power distribution.",
        "credits": "3",
        "preReq": "",
        "restrict": "Cannot be used as a technical elective for CISC or INSY majors or minors",
        "breadth": "GROUP A: A&S Creative Arts & humanities",
        "typ": "Spring"
    },{
        "code": "ENGL110",
        "name": "Seminar in Compisition",
        "descr": "Introduction to the process of academic writing that centers on the composition of analytical, research-based essays.",
        "credits": "3",
        "preReq": "ENGL312, ENGL410",
        "restrict": "Required of all students. Should be taken first year on campus",
        "breadth": "",
        "typ": "Fall, Winter, Spring, Summer"
    },{
        "code": "EGGG101",
        "name": "Introduction to Engineering",
        "descr": "Introduction to profession, including disciplines of chemical, civil, computer, electrical, environmental, and mechanical engineering. Prepares students for success through integration of: technical problem solving and engineering design, ethical decision-making, teamwork, and communicating to diverse audiences.",
        "credits": "2",
        "preReq": "",
        "restrict": "",
        "breadth": "",
        "typ": "Fall"

    }
]